// =============================================================================
// 45678901234567890123456789012345678901234567890123456789012345678901234567890
// =============================================================================
// ソフトウェア工学実習 iijima@ae.keio.ac.jp
// =============================================================================
package p06;
// =============================================================================
import java.util.Observer;
import java.util.Observable;
// =============================================================================
/**
 * ソフトウェア工学実習
 * @author iijima@ae.keio.ac.jp
 */
// =============================================================================
public class TestObserver implements Observer {
    // =========================================================================
    /**
     * [値属性] 名前.
     */
    // -------------------------------------------------------------------------
    private String name = null;
    // =========================================================================
    /**
     * [コンストラクタ] 初期化する.
     * @param name 名前
     */
    // -------------------------------------------------------------------------
    public TestObserver( String name ) {
        // ---------------------------------------------------------------------
        this.name = name;
        // ---------------------------------------------------------------------
    }
    // =========================================================================
    /**
     * ビューを更新する.
     * @param o 被監視オブジェクト
     * @param arg 引数
     */
    // -------------------------------------------------------------------------
    public void update( Observable o, Object arg ) {
        // ---------------------------------------------------------------------
        System.out.println( "    →　監視対象の更新を検出しました("
                     + name +"): "
                     + ((Integer) arg).toString() ); // 被監視オブジェクトから
                                                     // pushされたカウント値を表示します．
        // ---------------------------------------------------------------------
    }
    // =========================================================================
}
// =============================================================================