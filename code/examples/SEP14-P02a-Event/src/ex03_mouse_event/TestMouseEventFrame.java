// =======================================================
/*

 * 2015年度ソフトウェア工学実習: [Java例題] P0002-Event
 *                      2015-06-22
 *                      飯島 正 (iijima@ae.keio.ac.jp)
 * -------------------------------------------------------
 * P0002a-Event-20150622 iijima 2015-04-27に配布したものを再調整
 * -------------------------------------------------------
 */
// =======================================================
package ex03_mouse_event;
// =======================================================

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

// =======================================================
// =======================================================
/**
 * [Java例題] P0002-Event: Mouseイベント
 *
 * @author 飯島 正 (iijima@ae.keio.ac.jp)
 * @version <br>
 * 2015-06-22 iijima 再調整: NetBeans Projectとして再配布 <br>
 * 2015-04-27 iijima 新規作成: プレインなJavaファイル+バッチファイルで配布 <br>
 */
// =======================================================


public class TestMouseEventFrame extends JFrame {
// =======================================================
    // ===================================================
    // ///////////////////////////////////////////////////
    // ///// フィールド変数 //////////////////////////////
    // ///////////////////////////////////////////////////
    // ===================================================
    // ///// GUI 部品 ////////////////////////////////////
    // ===================================================
    // パネルとフォント
    // ---------------------------------------------------

    /**
     * パネル
     */
    // ---------------------------------------------------
    private JPanel aTestPanel = null;
    // ---------------------------------------------------
    /**
     * 結果表示用のパネル
     */
    // ---------------------------------------------------
    private JPanel aResultPanel = null;
    // ---------------------------------------------------
    /**
     * 結果表示用のテキストエリア
     */
    // ---------------------------------------------------
    private JTextArea aResultTextArea = null;
    // ---------------------------------------------------
    /**
     * フォント
     */
    // ---------------------------------------------------
    private Font aFont = null;

    // ===================================================
    // ===================================================
    // ///////////////////////////////////////////////////
    // ///// メソッド (コンストラクタ) ///////////////////
    // ///////////////////////////////////////////////////
    // ===================================================
    /**
     * 【コンストラクタ】 GUI部品の配置とイベントリスナーの登録
     */
    // ---------------------------------------------------
    public TestMouseEventFrame() {
        // -----------------------------------------------
        // (1) テスト用フレームの準備
        initializeTestFrame("Mouseイベントのテスト");
        // -----------------------------------------------
        // (2) MouseMotionイベントを発効するGUI部品のパネルへの追加
        // aTestPanelで，イベント発生させるので，
        // 特に追加するGUI部品はない
        // -----------------------------------------------
        // (3) MouseMotionイベントのリスナー登録
        aTestPanel.addMouseListener(new TestMouseEventListener());
        // -----------------------------------------------
        // (4) GUI部品の調整
        pack();
        // -----------------------------------------------
    }

    // ===================================================
    /**
     * テスト用フレームの初期化
     *
     * @param title タイトルバーの文字列
     */
    // ---------------------------------------------------
    private void initializeTestFrame(String title) {
        // -----------------------------------------------
        // (1) フレームの準備
        setTitle(title);
        setPreferredSize(new Dimension(600, 400));
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        // -----------------------------------------------
        // (2) パネルのレイアウトマネージャの準備
        setLayout(new BorderLayout());
        // -----------------------------------------------
        // (3) フォントの準備
        aFont = new Font("ＭＳ ゴシック", Font.PLAIN, 28);
        // -----------------------------------------------
        // (4) テスト用パネルの準備
        aTestPanel = new JPanel();
        add(aTestPanel, BorderLayout.CENTER);
        // -----------------------------------------------
        // (5) 結果表示用パネルの準備
        aResultTextArea = new JTextArea(5, 40);
        aResultTextArea.setFont(aFont);
        JScrollPane aScrollPane = new JScrollPane(aResultTextArea);
        aResultPanel = new JPanel();
        aResultPanel.add(aScrollPane);
        add(aResultPanel, BorderLayout.SOUTH);
        // -----------------------------------------------
    }

    // ===================================================
    // ///////////////////////////////////////////////////
    // ///// イベントハンドラー //////////////////////////
    // ///////////////////////////////////////////////////
    // ===================================================
    // ===================================================
    /**
     * イベントリスナー
     *
     * ※MouseListenerインタフェースを実装する代わりに<br>
     * ※MouseApapterクラスを継承することで，<br>
     * ※関心のあるハンドラーだけをオーバライドすることができる
     */
    // ---------------------------------------------------
    class TestMouseEventListener implements MouseListener {

        // -----------------------------------------------

        /**
         * マウスclickedイベントのハンドラー
         *
         * ※マウスpressイベントとマウスreleaseイベントが連続して発生<br>
         * ※2つのイベントの間でマウスが微妙に動くことを想定して<br>
         * ※マウスreleaseイベントで，マウスクリックを検出することも多い
         *
         * @param e マウスイベント
         */
        // -----------------------------------------------
        public void mouseClicked(MouseEvent e) {
            // -------------------------------------------
            String message = "マウスボタンがクリックされた";
            outputResult( message );
            // -------------------------------------------
        }

        // -----------------------------------------------

        /**
         * マウスpressイベントのハンドラー
         *
         * @param e マウスイベント
         */
        // -----------------------------------------------
        public void mousePressed(MouseEvent e) {
            // -------------------------------------------
            String message = "マウスボタンが押された";
            outputResult( message );
            // -------------------------------------------
        }

        // -----------------------------------------------

        /**
         * マウスreleaseイベントのハンドラー
         *
         * @param e マウスイベント
         */
        // -----------------------------------------------
        public void mouseReleased(MouseEvent e) {
            // -------------------------------------------
            String message = "マウスボタンが離された";
            outputResult( message );
            // -------------------------------------------
        }

        // -----------------------------------------------

        /**
         * マウスenterイベントのハンドラー
         *
         * @param e マウスイベント
         */
        // -----------------------------------------------
        public void mouseEntered(MouseEvent e) {
            // -------------------------------------------
            String message = "マウスがパネルに入った";
            outputResult( message );
            // -------------------------------------------
        }

        // -----------------------------------------------

        /**
         * マウスexitイベントのハンドラー
         *
         * @param e マウスイベント
         */
        // -----------------------------------------------
        public void mouseExited(MouseEvent e) {
            // -------------------------------------------
            String message = "マウスがパネルを出た";
            outputResult( message );
            // -------------------------------------------
        }
        // ===============================================
        /**
         * 結果表示
         * @param message 表示する結果
         */
        // -----------------------------------------------        
        private void outputResult( String message ) {
            // -------------------------------------------
            System.out.println(message);
            aResultTextArea.append(message + "\n");
            // -------------------------------------------
        }
        // ===============================================
    }

    // ===================================================
}
// =======================================================
